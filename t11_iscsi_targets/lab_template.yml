# VPC/EC2/EBS template for IP SAN Lab
# Peadar Grant

Parameters:
  
  LatestLinuxImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id

  LatestWindowsImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base
    
    
Resources:

  Vpc:
    Type: AWS::EC2::VPC 
    Properties: 
      CidrBlock: 10.0.0.0/16
      Tags:
      - Key: Name 
        Value: !Sub '${AWS::StackName}-vpc'
  
  Subnet:
    Type: AWS::EC2::Subnet    
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-subnet'        
      VpcId: !Ref Vpc 
        
  InternetGateway:
    Type: AWS::EC2::InternetGateway    
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-gateway'  

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment    
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
    
  RouteTable:
    Type: AWS::EC2::RouteTable    
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-route-table'
      VpcId: !Ref Vpc

  Route:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation    
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: allow connections from specified source security group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 3260
        ToPort: 3260
        CidrIp: 10.0.0.0/16

  ClientWindowsInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      SubnetId: !Ref Subnet
      ImageId: !Ref LatestWindowsImageId
      SecurityGroupIds:
      - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          net user Administrator "1Password"
          </powershell>
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-client-windows'              

  ClientLinuxInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.nano
      SubnetId: !Ref Subnet
      ImageId: !Ref LatestLinuxImageId
      SecurityGroupIds:
      - !Ref SecurityGroup
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-client-linux'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Pre-Bootstrap Configuration for ISCSI target
          # Allow password authentication
          cat /etc/ssh/sshd_config | sed "s/PasswordAuthentication no/PasswordAuthentication yes/" > /etc/ssh/sshd_config
          echo "MaxAuthTries 10" >> /etc/ssh/sshd_config
          systemctl restart sshd
          echo ubuntu:1Password | chpasswd
          # Software update
          apt -y update
          apt -y upgrade        

  TargetLinuxInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.nano
      SubnetId: !Ref Subnet
      ImageId: !Ref LatestLinuxImageId
      SecurityGroupIds:
      - !Ref SecurityGroup
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-target-instance'
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: "1"
            VolumeType: "standard"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Pre-Bootstrap Configuration for ISCSI target
          # Allow password authentication
          cat /etc/ssh/sshd_config | sed "s/PasswordAuthentication no/PasswordAuthentication yes/" > /etc/ssh/sshd_config
          echo "MaxAuthTries 10" >> /etc/ssh/sshd_config
          systemctl restart sshd
          echo ubuntu:1Password | chpasswd
          # Software update
          apt -y update
          apt -y upgrade
          #
          echo DONE!
          #
          # End of UserData bootstrap script
  
Outputs:

  TargetPublicIp:
    Value: !GetAtt TargetLinuxInstance.PublicIp
    Description: Client instance Public Ip

  TargetPrivateIp:
    Value: !GetAtt TargetLinuxInstance.PrivateIp
    Description: Client instance Private Ip
    
  ClientIp:
    Value: !GetAtt ClientLinuxInstance.PublicIp
    Description: Client instance Public Ip

  WindowsClientIp:
    Value: !GetAtt ClientWindowsInstance.PublicIp
    Description: Windows Client instance Public Ip    